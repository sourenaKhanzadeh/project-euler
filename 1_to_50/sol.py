"""
If we list all the natural numbers below 10 that are multiples of 3 or 5, 
we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

Answer: 234168
"""

def sum_multiples_3_5(n=1000):
    res = 0
    for i in range(1, n):
        if i % 3 == 0 or i % 5 == 0:
            res += i
    return res

"""
Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms.

Answere: 4613732
"""

def even_fib():
    a, b = 0, 1
    fib = []
    while b < 4_000_000:
        a, b = b, a+b
        if b % 2 == 0:
            fib.append(b)
    return sum(fib)

"""
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?

Answere: 6857
"""

def largest_prime_factor(n=600851475143):
    factors = []
    d = 2
    while n > 1:
        while n % d == 0:
            factors.append(d)
            n /= d
        d += 1
        if d * d > n:
            if n > 1:
                factors.append(int(n))
            break
    return max(factors)

if __name__ == "__main__":
    # print(sum_multiples_3_5())
    # print(even_fib())
    print(largest_prime_factor())
